name: Build and Push Docker Image

on:
  push:
    branches:
      - main  # Trigger this workflow when code is pushed to the 'main' branch
    paths:
      - '**/*'  # Only trigger for changes to Python files (or adjust for your app's language)

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
    # Checkout the code from GitHub
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up Docker Buildx (optional for advanced builds)
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Log into Docker Hub or Amazon ECR
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Build the Docker image and tag it
    - name: Build Docker image
      run: |
        docker build -t exploredockerid/scholarship:${{ github.sha }} .

    # Push the Docker image to a registry
    - name: Push Docker image to Docker Hub
      run: |
        docker push exploredockerid/scholarship:${{ github.sha }}





  # deploy_to_eks:
  #   runs-on: ubuntu-latest
  #   needs: build_and_push
  #   steps:
  #   # Checkout code again in the deployment job
  #   - name: Checkout code
  #     uses: actions/checkout@v3

  #   # Configure AWS credentials
  #   - name: Set up AWS CLI
  #     uses: aws-actions/configure-aws-credentials@v1
  #     with:
  #       aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #       aws-region: ${{ secrets.AWS_REGION }}

  #   # Set up kubectl to interact with EKS
  #   - name: Set up kubectl
  #     uses: aws-actions/eks-update-kubeconfig@v1
  #     with:
  #       cluster-name: my-cluster

  #   # Deploy Docker image to EKS
  #   - name: Deploy to EKS
  #     run: |
  #       kubectl set image deployment/my-app-deployment my-app-container=${{ secrets.ECR_REPOSITORY_URI }}:${{ github.sha }}
  #       kubectl rollout restart deployment/my-app-deployment